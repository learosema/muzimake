#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>
#include <string.h>

#ifdef __DOS__
#include <dos.h>
#include <conio.h>
#endif

const uint8_t font_data[] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x7e, 0x81, 0xa5, 0x81, 0xbd, 0x99, 0x81, 0x7e,
	0x7e, 0xff, 0xdb, 0xff, 0xc3, 0xe7, 0xff, 0x7e,
	0x6c, 0xfe, 0xfe, 0xfe, 0x7c, 0x38, 0x10, 0x00,
	0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x10, 0x00,
	0x38, 0x7c, 0x38, 0xfe, 0xfe, 0x7c, 0x38, 0x7c,
	0x10, 0x10, 0x38, 0x7c, 0xfe, 0x7c, 0x38, 0x7c,
	0x00, 0x00, 0x18, 0x3c, 0x3c, 0x18, 0x00, 0x00,
	0xff, 0xff, 0xe7, 0xc3, 0xc3, 0xe7, 0xff, 0xff,
	0x00, 0x3c, 0x66, 0x42, 0x42, 0x66, 0x3c, 0x00,
	0xff, 0xc3, 0x99, 0xbd, 0xbd, 0x99, 0xc3, 0xff,
	0x0f, 0x07, 0x0f, 0x7d, 0xcc, 0xcc, 0xcc, 0x78,
	0x3c, 0x66, 0x66, 0x66, 0x3c, 0x18, 0x7e, 0x18,
	0x3f, 0x33, 0x3f, 0x30, 0x30, 0x70, 0xf0, 0xe0,
	0x7f, 0x63, 0x7f, 0x63, 0x63, 0x67, 0xe6, 0xc0,
	0x99, 0x5a, 0x3c, 0xe7, 0xe7, 0x3c, 0x5a, 0x99,
	0x80, 0xe0, 0xf8, 0xfe, 0xf8, 0xe0, 0x80, 0x00,
	0x02, 0x0e, 0x3e, 0xfe, 0x3e, 0x0e, 0x02, 0x00,
	0x18, 0x3c, 0x7e, 0x18, 0x18, 0x7e, 0x3c, 0x18,
	0x66, 0x66, 0x66, 0x66, 0x66, 0x00, 0x66, 0x00,
	0x7f, 0xdb, 0xdb, 0x7b, 0x1b, 0x1b, 0x1b, 0x00,
	0x3e, 0x63, 0x38, 0x6c, 0x6c, 0x38, 0xcc, 0x78,
	0x00, 0x00, 0x00, 0x00, 0x7e, 0x7e, 0x7e, 0x00,
	0x18, 0x3c, 0x7e, 0x18, 0x7e, 0x3c, 0x18, 0xff,
	0x18, 0x3c, 0x7e, 0x18, 0x18, 0x18, 0x18, 0x00,
	0x18, 0x18, 0x18, 0x18, 0x7e, 0x3c, 0x18, 0x00,
	0x00, 0x18, 0x0c, 0xfe, 0x0c, 0x18, 0x00, 0x00,
	0x00, 0x30, 0x60, 0xfe, 0x60, 0x30, 0x00, 0x00,
	0x00, 0x00, 0xc0, 0xc0, 0xc0, 0xfe, 0x00, 0x00,
	0x00, 0x24, 0x66, 0xff, 0x66, 0x24, 0x00, 0x00,
	0x00, 0x18, 0x3c, 0x7e, 0xff, 0xff, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x7e, 0x3c, 0x18, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x30, 0x78, 0x78, 0x30, 0x30, 0x00, 0x30, 0x00,
	0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x6c, 0x6c, 0xfe, 0x6c, 0xfe, 0x6c, 0x6c, 0x00,
	0x30, 0x7c, 0xc0, 0x78, 0x0c, 0xf8, 0x30, 0x00,
	0x00, 0xc6, 0xcc, 0x18, 0x30, 0x66, 0xc6, 0x00,
	0x38, 0x6c, 0x38, 0x76, 0xdc, 0xcc, 0x76, 0x00,
	0x60, 0x60, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x18, 0x30, 0x60, 0x60, 0x60, 0x30, 0x18, 0x00,
	0x60, 0x30, 0x18, 0x18, 0x18, 0x30, 0x60, 0x00,
	0x00, 0x66, 0x3c, 0xff, 0x3c, 0x66, 0x00, 0x00,
	0x00, 0x30, 0x30, 0xfc, 0x30, 0x30, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x60,
	0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00,
	0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0, 0x80, 0x00,
	0x7c, 0xc6, 0xce, 0xde, 0xf6, 0xe6, 0x7c, 0x00,
	0x30, 0x70, 0x30, 0x30, 0x30, 0x30, 0xfc, 0x00,
	0x78, 0xcc, 0x0c, 0x38, 0x60, 0xcc, 0xfc, 0x00,
	0x78, 0xcc, 0x0c, 0x38, 0x0c, 0xcc, 0x78, 0x00,
	0x1c, 0x3c, 0x6c, 0xcc, 0xfe, 0x0c, 0x1e, 0x00,
	0xfc, 0xc0, 0xf8, 0x0c, 0x0c, 0xcc, 0x78, 0x00,
	0x38, 0x60, 0xc0, 0xf8, 0xcc, 0xcc, 0x78, 0x00,
	0xfc, 0xcc, 0x0c, 0x18, 0x30, 0x30, 0x30, 0x00,
	0x78, 0xcc, 0xcc, 0x78, 0xcc, 0xcc, 0x78, 0x00,
	0x78, 0xcc, 0xcc, 0x7c, 0x0c, 0x18, 0x70, 0x00,
	0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00,
	0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x60,
	0x18, 0x30, 0x60, 0xc0, 0x60, 0x30, 0x18, 0x00,
	0x00, 0x00, 0xfc, 0x00, 0x00, 0xfc, 0x00, 0x00,
	0x60, 0x30, 0x18, 0x0c, 0x18, 0x30, 0x60, 0x00,
	0x78, 0xcc, 0x0c, 0x18, 0x30, 0x00, 0x30, 0x00,
	0x7c, 0xc6, 0xde, 0xde, 0xde, 0xc0, 0x78, 0x00,
	0x7c, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00,
	0xfc, 0xc6, 0xc6, 0xfc, 0xc6, 0xc6, 0xfc, 0x00,
	0x7c, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x7c, 0x00,
	0xfc, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0xfc, 0x00,
	0xfe, 0xc0, 0xc0, 0xfc, 0xc0, 0xc0, 0xfe, 0x00,
	0xfe, 0xc0, 0xc0, 0xf8, 0xc0, 0xc0, 0xc0, 0x00,
	0x7c, 0xc6, 0xc0, 0xc0, 0xce, 0xc6, 0x7e, 0x00,
	0xc6, 0xc6, 0xc6, 0xfe, 0xc6, 0xc6, 0xc6, 0x00,
	0x30, 0x00, 0x30, 0x30, 0x30, 0x30, 0x30, 0x00,
	0x0c, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78, 0x00,
	0xc6, 0xc6, 0xcc, 0xf8, 0xcc, 0xc6, 0xc6, 0x00,
	0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xfe, 0x00,
	0x6c, 0xfe, 0xd6, 0xd6, 0xc6, 0xc6, 0xc6, 0x00,
	0xc6, 0xe6, 0xf6, 0xde, 0xce, 0xc6, 0xc6, 0x00,
	0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x7c, 0x00,
	0xfc, 0xc6, 0xc6, 0xfc, 0xc0, 0xc0, 0xc0, 0x00,
	0x7c, 0xc6, 0xc6, 0xc6, 0xc6, 0xce, 0x7c, 0x06,
	0xfc, 0xc6, 0xc6, 0xfc, 0xcc, 0xc6, 0xc6, 0x00,
	0x7e, 0xc0, 0xc0, 0x7c, 0x06, 0x06, 0xfc, 0x00,
	0x7e, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x00,
	0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xfc, 0x00,
	0xc6, 0xc6, 0xc6, 0xc6, 0xc6, 0x6c, 0x38, 0x00,
	0xc6, 0xc6, 0xc6, 0xd6, 0xfe, 0xee, 0x44, 0x00,
	0xc6, 0xc6, 0x6c, 0x38, 0x38, 0x6c, 0xc6, 0x00,
	0xcc, 0xcc, 0xcc, 0x78, 0x30, 0x30, 0x30, 0x00,
	0xfe, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xfe, 0x00,
	0x78, 0x60, 0x60, 0x60, 0x60, 0x60, 0x78, 0x00,
	0xc0, 0x60, 0x30, 0x18, 0x0c, 0x06, 0x02, 0x00,
	0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78, 0x00,
	0x10, 0x38, 0x6c, 0xc6, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
	0x30, 0x30, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x76, 0x00,
	0x60, 0x60, 0x60, 0x7c, 0x66, 0x66, 0x7c, 0x00,
	0x00, 0x00, 0x78, 0xcc, 0xc0, 0xcc, 0x78, 0x00,
	0x0c, 0x0c, 0x0c, 0x7c, 0xcc, 0xcc, 0x7c, 0x00,
	0x00, 0x00, 0x78, 0xcc, 0xfc, 0xc0, 0x78, 0x00,
	0x38, 0x6c, 0x60, 0xf0, 0x60, 0x60, 0xf0, 0x00,
	0x00, 0x00, 0x76, 0xcc, 0xcc, 0x7c, 0x0c, 0xf8,
	0xe0, 0x60, 0x6c, 0x76, 0x66, 0x66, 0xe6, 0x00,
	0x00, 0x30, 0x00, 0x30, 0x30, 0x30, 0x30, 0x00,
	0x0c, 0x00, 0x0c, 0x0c, 0x0c, 0xcc, 0xcc, 0x78,
	0x60, 0x60, 0x66, 0x6c, 0x78, 0x6c, 0x66, 0x00,
	0x70, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78, 0x00,
	0x00, 0x00, 0xcc, 0xfe, 0xfe, 0xd6, 0xc6, 0x00,
	0x00, 0x00, 0xf8, 0xcc, 0xcc, 0xcc, 0xcc, 0x00,
	0x00, 0x00, 0x78, 0xcc, 0xcc, 0xcc, 0x78, 0x00,
	0x00, 0x00, 0x7c, 0x66, 0x66, 0x7c, 0x60, 0x60,
	0x00, 0x00, 0x7c, 0xcc, 0xcc, 0x7c, 0x0c, 0x0c,
	0x00, 0x00, 0x7c, 0x66, 0x60, 0x60, 0x60, 0x00,
	0x00, 0x00, 0x7c, 0xc0, 0x78, 0x0c, 0xf8, 0x00,
	0x30, 0x30, 0x78, 0x30, 0x30, 0x30, 0x1c, 0x00,
	0x00, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0x7e, 0x00,
	0x00, 0x00, 0xcc, 0xcc, 0xcc, 0x78, 0x30, 0x00,
	0x00, 0x00, 0xc6, 0xd6, 0xfe, 0xfe, 0x6c, 0x00,
	0x00, 0x00, 0xc6, 0x6c, 0x38, 0x6c, 0xc6, 0x00,
	0x00, 0x00, 0xcc, 0xcc, 0xcc, 0x7c, 0x0c, 0xf8,
	0x00, 0x00, 0xfc, 0x18, 0x30, 0x60, 0xfc, 0x00,
	0x1c, 0x30, 0x30, 0xe0, 0x30, 0x30, 0x1c, 0x00,
	0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x00,
	0xe0, 0x30, 0x30, 0x1c, 0x30, 0x30, 0xe0, 0x00,
	0x76, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x10, 0x38, 0x6c, 0xc6, 0xc6, 0xfe, 0x00,
	0x78, 0xcc, 0xc0, 0xcc, 0x78, 0x18, 0x0c, 0x78,
	0x00, 0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0x7e, 0x00,
	0x1c, 0x00, 0x78, 0xcc, 0xfc, 0xc0, 0x78, 0x00,
	0x7e, 0xc3, 0x3c, 0x06, 0x3e, 0x66, 0x3f, 0x00,
	0xcc, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x00,
	0xe0, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x00,
	0x30, 0x30, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x00,
	0x00, 0x00, 0x78, 0xc0, 0xc0, 0x78, 0x0c, 0x38,
	0x7e, 0xc3, 0x3c, 0x66, 0x7e, 0x60, 0x3c, 0x00,
	0xcc, 0x00, 0x78, 0xcc, 0xfc, 0xc0, 0x78, 0x00,
	0xe0, 0x00, 0x78, 0xcc, 0xfc, 0xc0, 0x78, 0x00,
	0xcc, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00,
	0x7c, 0xc6, 0x38, 0x18, 0x18, 0x18, 0x3c, 0x00,
	0xe0, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00,
	0xc6, 0x38, 0x6c, 0xc6, 0xfe, 0xc6, 0xc6, 0x00,
	0x30, 0x30, 0x00, 0x78, 0xcc, 0xfc, 0xcc, 0x00,
	0x1c, 0x00, 0xfc, 0x60, 0x78, 0x60, 0xfc, 0x00,
	0x00, 0x00, 0x7f, 0x0c, 0x7f, 0xcc, 0x7f, 0x00,
	0x3e, 0x6c, 0xcc, 0xfe, 0xcc, 0xcc, 0xce, 0x00,
	0x78, 0xcc, 0x00, 0x78, 0xcc, 0xcc, 0x78, 0x00,
	0x00, 0xcc, 0x00, 0x78, 0xcc, 0xcc, 0x78, 0x00,
	0x00, 0xe0, 0x00, 0x78, 0xcc, 0xcc, 0x78, 0x00,
	0x78, 0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0x7e, 0x00,
	0x00, 0xe0, 0x00, 0xcc, 0xcc, 0xcc, 0x7e, 0x00,
	0x00, 0xcc, 0x00, 0xcc, 0xcc, 0x7c, 0x0c, 0xf8,
	0xc3, 0x18, 0x3c, 0x66, 0x66, 0x3c, 0x18, 0x00,
	0xcc, 0x00, 0xcc, 0xcc, 0xcc, 0xcc, 0x78, 0x00,
	0x18, 0x18, 0x7e, 0xc0, 0xc0, 0x7e, 0x18, 0x18,
	0x38, 0x6c, 0x64, 0xf0, 0x60, 0xe6, 0xfc, 0x00,
	0xcc, 0xcc, 0x78, 0xfc, 0x30, 0xfc, 0x30, 0x30,
	0xf8, 0xcc, 0xcc, 0xfa, 0xc6, 0xcf, 0xc6, 0xc7,
	0x0e, 0x1b, 0x18, 0x3c, 0x18, 0x18, 0xd8, 0x70,
	0x1c, 0x00, 0x78, 0x0c, 0x7c, 0xcc, 0x7e, 0x00,
	0x38, 0x00, 0x70, 0x30, 0x30, 0x30, 0x78, 0x00,
	0x00, 0x1c, 0x00, 0x78, 0xcc, 0xcc, 0x78, 0x00,
	0x00, 0x1c, 0x00, 0xcc, 0xcc, 0xcc, 0x7e, 0x00,
	0x00, 0xf8, 0x00, 0xf8, 0xcc, 0xcc, 0xcc, 0x00,
	0xfc, 0x00, 0xcc, 0xec, 0xfc, 0xdc, 0xcc, 0x00,
	0x3c, 0x6c, 0x6c, 0x3e, 0x00, 0x7e, 0x00, 0x00,
	0x38, 0x6c, 0x6c, 0x38, 0x00, 0x7c, 0x00, 0x00,
	0x30, 0x00, 0x30, 0x60, 0xc0, 0xcc, 0x78, 0x00,
	0x00, 0x00, 0x00, 0xfc, 0xc0, 0xc0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0xfc, 0x0c, 0x0c, 0x00, 0x00,
	0xc3, 0xc6, 0xcc, 0xde, 0x33, 0x66, 0xcc, 0x0f,
	0xc3, 0xc6, 0xcc, 0xdb, 0x37, 0x6f, 0xcf, 0x03,
	0x18, 0x18, 0x00, 0x18, 0x18, 0x18, 0x18, 0x00,
	0x00, 0x33, 0x66, 0xcc, 0x66, 0x33, 0x00, 0x00,
	0x00, 0xcc, 0x66, 0x33, 0x66, 0xcc, 0x00, 0x00,
	0x22, 0x88, 0x22, 0x88, 0x22, 0x88, 0x22, 0x88,
	0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa, 0x55, 0xaa,
	0xdb, 0x77, 0xdb, 0xee, 0xdb, 0x77, 0xdb, 0xee,
	0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0xf8, 0x18, 0x18, 0x18,
	0x18, 0x18, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18,
	0x36, 0x36, 0x36, 0x36, 0xf6, 0x36, 0x36, 0x36,
	0x00, 0x00, 0x00, 0x00, 0xfe, 0x36, 0x36, 0x36,
	0x00, 0x00, 0xf8, 0x18, 0xf8, 0x18, 0x18, 0x18,
	0x36, 0x36, 0xf6, 0x06, 0xf6, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36, 0x36,
	0x00, 0x00, 0xfe, 0x06, 0xf6, 0x36, 0x36, 0x36,
	0x36, 0x36, 0xf6, 0x06, 0xfe, 0x00, 0x00, 0x00,
	0x36, 0x36, 0x36, 0x36, 0xfe, 0x00, 0x00, 0x00,
	0x18, 0x18, 0xf8, 0x18, 0xf8, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xf8, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x1f, 0x00, 0x00, 0x00,
	0x18, 0x18, 0x18, 0x18, 0xff, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xff, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x1f, 0x18, 0x18, 0x18,
	0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
	0x18, 0x18, 0x18, 0x18, 0xff, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18,
	0x36, 0x36, 0x36, 0x36, 0x37, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x37, 0x30, 0x3f, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x3f, 0x30, 0x37, 0x36, 0x36, 0x36,
	0x36, 0x36, 0xf7, 0x00, 0xff, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xff, 0x00, 0xf7, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x37, 0x30, 0x37, 0x36, 0x36, 0x36,
	0x00, 0x00, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00,
	0x36, 0x36, 0xf7, 0x00, 0xf7, 0x36, 0x36, 0x36,
	0x18, 0x18, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00,
	0x36, 0x36, 0x36, 0x36, 0xff, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xff, 0x00, 0xff, 0x18, 0x18, 0x18,
	0x00, 0x00, 0x00, 0x00, 0xff, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0x3f, 0x00, 0x00, 0x00,
	0x18, 0x18, 0x1f, 0x18, 0x1f, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x1f, 0x18, 0x1f, 0x18, 0x18, 0x18,
	0x00, 0x00, 0x00, 0x00, 0x3f, 0x36, 0x36, 0x36,
	0x36, 0x36, 0x36, 0x36, 0xff, 0x36, 0x36, 0x36,
	0x18, 0x18, 0xff, 0x18, 0xff, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0xf8, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x18, 0x18,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff,
	0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0, 0xf0,
	0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f, 0x0f,
	0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x76, 0xdc, 0xc8, 0xdc, 0x76, 0x00,
	0x00, 0x78, 0xcc, 0xf8, 0xcc, 0xf8, 0xc0, 0xc0,
	0x00, 0xfc, 0xcc, 0xc0, 0xc0, 0xc0, 0xc0, 0x00,
	0x00, 0xfe, 0x6c, 0x6c, 0x6c, 0x6c, 0x6c, 0x00,
	0xfc, 0xcc, 0x60, 0x30, 0x60, 0xcc, 0xfc, 0x00,
	0x00, 0x00, 0x7e, 0xd8, 0xd8, 0xd8, 0x70, 0x00,
	0x00, 0x66, 0x66, 0x66, 0x66, 0x7c, 0x60, 0xc0,
	0x00, 0x76, 0xdc, 0x18, 0x18, 0x18, 0x18, 0x00,
	0xfc, 0x30, 0x78, 0xcc, 0xcc, 0x78, 0x30, 0xfc,
	0x38, 0x6c, 0xc6, 0xfe, 0xc6, 0x6c, 0x38, 0x00,
	0x38, 0x6c, 0xc6, 0xc6, 0x6c, 0x6c, 0xee, 0x00,
	0x1c, 0x30, 0x18, 0x7c, 0xcc, 0xcc, 0x78, 0x00,
	0x00, 0x00, 0x7e, 0xdb, 0xdb, 0x7e, 0x00, 0x00,
	0x06, 0x0c, 0x7e, 0xdb, 0xdb, 0x7e, 0x60, 0xc0,
	0x38, 0x60, 0xc0, 0xf8, 0xc0, 0x60, 0x38, 0x00,
	0x78, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0xcc, 0x00,
	0x00, 0xfc, 0x00, 0xfc, 0x00, 0xfc, 0x00, 0x00,
	0x30, 0x30, 0xfc, 0x30, 0x30, 0x00, 0xfc, 0x00,
	0x60, 0x30, 0x18, 0x30, 0x60, 0x00, 0xfc, 0x00,
	0x18, 0x30, 0x60, 0x30, 0x18, 0x00, 0xfc, 0x00,
	0x0e, 0x1b, 0x1b, 0x18, 0x18, 0x18, 0x18, 0x18,
	0x18, 0x18, 0x18, 0x18, 0x18, 0xd8, 0xd8, 0x70,
	0x30, 0x30, 0x00, 0xfc, 0x00, 0x30, 0x30, 0x00,
	0x00, 0x76, 0xdc, 0x00, 0x76, 0xdc, 0x00, 0x00,
	0x38, 0x6c, 0x6c, 0x38, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
	0x0f, 0x0c, 0x0c, 0x0c, 0xec, 0x6c, 0x3c, 0x1c,
	0x78, 0x6c, 0x6c, 0x6c, 0x6c, 0x00, 0x00, 0x00,
	0x70, 0x18, 0x30, 0x60, 0x78, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x3c, 0x3c, 0x3c, 0x3c, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

typedef struct dos_block_s {
    uint16_t segment;   // Real mode segment for ES
    uint16_t selector;  // Protected mode selector for direct access
} dos_block_t;

#if defined __DOS__ && defined __386__

dos_block_t dpmi_alloc_dos_block(uint32_t size)
{
	dos_block_t dblk = {0, 0};
	union REGS regs;

	regs.x.eax = 0x0100; // DPMI function: Allocate DOS memory block
	regs.x.ebx = (size + 15) >> 4; // Round up to paragraphs

	int386(0x31, &regs, &regs);

	if (regs.x.cflag)
			return dblk; // Failure, return {0, 0}

	dblk.segment = regs.w.ax;
	dblk.selector = regs.w.dx;
	return dblk;
}

void dpmi_free_dos_block(dos_block_t dblk)
{
	if (dblk.segment == 0) {
		return;
	}

	union REGS regs;
	regs.x.edx = 0;
	regs.w.ax = 0x0101;
	regs.w.dx = dblk.selector;

	int386(0x31, &regs, &regs);
}

int dpmi_lock_linear_region(void *address, uint32_t size) {
	union REGS regs;
	uint32_t linear_addr;
	linear_addr = (uint32_t)address;
	regs.w.ax = 0x0600;
	regs.w.bx = (uint16_t) (linear_addr >> 16);
	regs.w.cx = (uint16_t) (linear_addr & 0xffff);
	regs.w.si = (uint16_t) (size >> 16);
	regs.w.di = (uint16_t) (size & 0xffff);
	int386(0x31, &regs, &regs);
	return (regs.x.cflag == 0) ? 0: -1;
}

int dpmi_unlock_linear_region(void *address, uint32_t size)
{
	union REGS regs;
	struct SREGS sregs;
	uint32_t linear_addr;
	linear_addr = (uint32_t)address;
	regs.w.ax = 0x0601;
	regs.w.bx = (uint16_t) (linear_addr >> 16);
	regs.w.cx = (uint16_t) (linear_addr & 0xffff);
	regs.w.si = (uint16_t) (size >> 16);
	regs.w.di = (uint16_t) (size & 0xffff);
	int386(0x31, &regs, &regs);
	return (regs.x.cflag == 0) ? 0: -1;
}
#else
#define dpmi_alloc_dos_block(size)
#define dpmi_free_dos_block(dosblock)
#define dpmi_lock_linear_region(address, size)
#define dpmi_unlock_linear_region(address, size)
#endif

#ifdef __DOS__
void set_mode(const uint8_t mode)
{
	union REGS regs;

	regs.h.al = 0;
	regs.h.ah = mode;
	#ifdef __386__
	int386(0x10, &regs, &regs);
	#else
	int86(0x10, &regs, &regs);
	#endif
}
#else
#define set_mode(mode)
#endif


#ifdef __DOS__
void set_font(const uint8_t *charData, const uint16_t charHeight, const uint16_t offset, const uint16_t count)
{
	#ifdef __386__
	union REGPACK regs = {0};
	uint32_t sizeInBytes = count * charHeight;
	regs.w.ax = 0x1110;
	regs.w.dx = offset;
	regs.w.cx = count;
	regs.h.bh = charHeight & 255;
	regs.h.bl = 0;

	dos_block_t memblock = dpmi_alloc_dos_block(sizeInBytes);
	void *linear_addr = (void*)(memblock.selector << 4);
	dpmi_lock_linear_region(linear_addr, sizeInBytes);
	if (memblock.segment == 0) {
		fprintf(stderr, "Error allocating memory for font. Exiting.\n");
		exit(1);
	}
	uint8_t far *rm_buffer = (uint8_t far *)MK_FP(memblock.selector, 0);
	_fmemcpy(rm_buffer, charData, sizeInBytes);
	regs.w.es = memblock.selector;
	regs.x.ebp = 0x00000000;
	intr(0x10, &regs);
	dpmi_unlock_linear_region(linear_addr, sizeInBytes);
	dpmi_free_dos_block(memblock);
	#endif

	#ifdef __I86__
	union REGPACK regs = {0};
	uint16_t sizeInBytes = count * charHeight;
	regs.w.ax = 0x1110;
	regs.w.dx = offset;
	regs.w.cx = count;
	regs.h.bh = charHeight & 255;
	regs.h.bl = 0;
	regs.w.es = FP_SEG(charData);
	regs.w.bp = FP_OFF(charData);
	intr(0x10, &regs);
	#endif
}
#else
#define set_font(charData, charHeight, offset, count)
#endif


int main() {
	set_font(font_data, 8, 0, 256);

	printf("Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam ");
	printf("nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam ");
	printf("erat, sed diam voluptua. At vero eos et accusam et justo duo ");
	printf("dolores et ea rebum. Stet clita kasd gubergren, no sea takimata ");
	printf("sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, ");
	printf("consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut ");
	printf("labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et ");
	printf("accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no ");
	printf("sea takimata sanctus est Lorem ipsum dolor sit amet.\n");

	#ifdef __DOS__
	getch();
	#endif
	return 0;
}
